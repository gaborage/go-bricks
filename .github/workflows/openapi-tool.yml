name: OpenAPI Tool CI

permissions:
  contents: read

on:
  push:
    branches: [ main ]
    paths:
      - 'tools/openapi/**'
      - '.github/workflows/openapi-tool.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tools/openapi/**'
      - '.github/workflows/openapi-tool.yml'

defaults:
  run:
    working-directory: tools/openapi

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.25

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-openapi-tool-${{ hashFiles('tools/openapi/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-openapi-tool-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -race -coverprofile=coverage.out $(go list ./... | grep -v models)

    - name: Upload coverage artifact for SonarCloud
      uses: actions/upload-artifact@v4
      with:
        name: openapi-tool-coverage-report
        path: tools/openapi/coverage.out
        retention-days: 1

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.25
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9
      with:
        version: latest
        args: --timeout=5m --skip-dirs=tools,examples

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.25

    - name: Install gosec
      run: go install github.com/securego/gosec/v2/cmd/gosec@latest

    - name: Run Gosec Security Scanner
      run: gosec ./...

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.25

    - name: Build and validate CLI
      run: make validate-cli

    - name: Verify go mod
      run: |
        go mod tidy
        git diff --exit-code go.mod go.sum

  sonarqube:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: openapi-tool-coverage-report
          path: tools/openapi

      - name: Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}