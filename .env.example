# GoBricks Configuration Environment Variables
# Copy this file to .env and adjust values for your environment

# ============================================================================
# Application Configuration
# ============================================================================

# Application name and basic settings
APP_NAME=gobricks-service
APP_VERSION=1.0.0
APP_ENV=development
APP_DEBUG=false
APP_NAMESPACE=default

# Rate limiting configuration
APP_RATE_LIMIT=100
APP_RATE_BURST=50

# IP Pre-guard rate limiting (runs before tenant resolution)
APP_RATE_IPPREGUARD_ENABLED=false
APP_RATE_IPPREGUARD_THRESHOLD=2000

# ============================================================================
# HTTP Server Configuration
# ============================================================================

# Server host and port
SERVER_HOST=localhost
SERVER_PORT=8080

# Server timeout configurations (duration format: 10s, 1m, 1h)
SERVER_TIMEOUT_READ=30s
SERVER_TIMEOUT_WRITE=30s
SERVER_TIMEOUT_IDLE=120s
SERVER_TIMEOUT_MIDDLEWARE=10s
SERVER_TIMEOUT_SHUTDOWN=10s

# Server path configurations
SERVER_PATH_BASE=/api/v1
SERVER_PATH_HEALTH=/health
SERVER_PATH_READY=/ready

# ============================================================================
# Database Configuration
# ============================================================================

# Database type and basic connection settings
DATABASE_TYPE=postgres
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_DATABASE=gobricks_db
DATABASE_USERNAME=gobricks_user
DATABASE_PASSWORD=your_password_here

# Alternative: Full connection string (overrides individual settings above)
# DATABASE_CONNECTIONSTRING=postgres://user:password@localhost:5432/dbname?sslmode=disable

# Connection pool configuration
DATABASE_POOL_MAX_CONNECTIONS=25
DATABASE_POOL_IDLE_CONNECTIONS=5
DATABASE_POOL_IDLE_TIME=5m
DATABASE_POOL_LIFETIME_MAX=1h

# Query configuration
DATABASE_QUERY_SLOW_THRESHOLD=1s
DATABASE_QUERY_SLOW_ENABLED=true
DATABASE_QUERY_LOG_PARAMETERS=false
DATABASE_QUERY_LOG_MAX=1000

# TLS/SSL configuration
DATABASE_TLS_MODE=disable
DATABASE_TLS_CERT=/path/to/client-cert.pem
DATABASE_TLS_KEY=/path/to/client-key.pem
DATABASE_TLS_CA=/path/to/ca-cert.pem

# Oracle-specific configuration
DATABASE_ORACLE_SERVICE_NAME=XEPDB1
DATABASE_ORACLE_SERVICE_SID=XE

# MongoDB-specific configuration
DATABASE_MONGO_REPLICA_SET=rs0
DATABASE_MONGO_REPLICA_PREFERENCE=primary
DATABASE_MONGO_AUTH_SOURCE=admin
DATABASE_MONGO_CONCERN_WRITE=majority

# ============================================================================
# Logging Configuration
# ============================================================================

# Log level and formatting
LOG_LEVEL=info
LOG_PRETTY=false

# Log output configuration
LOG_OUTPUT_FORMAT=json
LOG_OUTPUT_FILE=/var/log/gobricks/app.log

# ============================================================================
# Messaging Configuration
# ============================================================================

# Message broker configuration
MESSAGING_BROKER_URL=amqp://guest:guest@localhost:5672/
MESSAGING_BROKER_VIRTUALHOST=/

# Message routing configuration
MESSAGING_ROUTING_EXCHANGE=gobricks.events
MESSAGING_ROUTING_KEY=default

# Custom message headers (JSON format)
# MESSAGING_HEADERS={"service":"gobricks","version":"1.0.0"}

# ============================================================================
# Multi-tenant Configuration
# ============================================================================

# Enable multi-tenant support
MULTITENANT_ENABLED=false

# Tenant resolver configuration
MULTITENANT_RESOLVER_TYPE=header
MULTITENANT_RESOLVER_HEADER=X-Tenant-ID
MULTITENANT_RESOLVER_DOMAIN=api.example.com
MULTITENANT_RESOLVER_PROXIES=false

# Tenant configuration cache
MULTITENANT_CACHE_TTL=5m

# Tenant connection limits and cleanup
MULTITENANT_LIMITS_TENANTS=100
MULTITENANT_LIMITS_CLEANUP_INTERVAL=5m

# Tenant ID validation
MULTITENANT_VALIDATION_PATTERN=^[a-z0-9-]{1,64}$

# ============================================================================
# Custom Application Configuration Examples
# ============================================================================
# Add your custom configuration variables here following the same pattern
# For nested configurations, use underscores to separate levels

# Example: custom.payment.api.key -> CUSTOM_PAYMENT_API_KEY
# CUSTOM_PAYMENT_API_KEY=your_api_key_here
# CUSTOM_PAYMENT_API_TIMEOUT=30s
# CUSTOM_PAYMENT_API_BASE_URL=https://api.payment-provider.com

# Example: custom.service.redis.url -> CUSTOM_SERVICE_REDIS_URL
# CUSTOM_SERVICE_REDIS_URL=redis://localhost:6379/0
# CUSTOM_SERVICE_REDIS_POOL_SIZE=10